From c88c2590a631f5a8f1dfc8e4b74f8c8da1b82315 Mon Sep 17 00:00:00 2001
From: Martino Facchin <m.facchin@arduino.cc>
Date: Wed, 11 Aug 2021 12:15:43 +0200
Subject: [PATCH 104/204] GEMALTO: implement GNSS

---
 .../GEMALTO_CINTERION_CellularStack.cpp       | 36 +++++++++++++++++++
 .../GEMALTO_CINTERION_CellularStack.h         |  8 +++++
 2 files changed, 44 insertions(+)

diff --git a/connectivity/drivers/cellular/GEMALTO/CINTERION/GEMALTO_CINTERION_CellularStack.cpp b/connectivity/drivers/cellular/GEMALTO/CINTERION/GEMALTO_CINTERION_CellularStack.cpp
index 94975e1b66..917accc916 100644
--- a/connectivity/drivers/cellular/GEMALTO/CINTERION/GEMALTO_CINTERION_CellularStack.cpp
+++ b/connectivity/drivers/cellular/GEMALTO/CINTERION/GEMALTO_CINTERION_CellularStack.cpp
@@ -126,6 +126,40 @@ void GEMALTO_CINTERION_CellularStack::sisr_urc_handler(int sock_id, int urc_code
     }
 }
 
+
+void GEMALTO_CINTERION_CellularStack::lock() {
+    _at.lock();
+}
+
+void GEMALTO_CINTERION_CellularStack::unlock() {
+    _at.unlock();
+}
+
+void GEMALTO_CINTERION_CellularStack::urc_gnss() {
+    printf("urc_gnss called\n");
+    printf("%x\n", _gnss_cb);
+
+    char gnss_string[50] = {'$', 'G'};
+    if (_gnss_cb) {
+        _at.set_delimiter('\n');
+        _at.read_string(&gnss_string[2], 48);
+        _at.set_default_delimiter();
+        _gnss_cb(gnss_string);
+    }
+}
+
+void GEMALTO_CINTERION_CellularStack::startGNSS(mbed::Callback<void(char*)> gnss_cb) {
+    _at.lock();
+    _gnss_cb = gnss_cb;
+    _at.at_cmd_discard("^SGPSC", "=", "%s%d", "Engine/StartMode", 0);
+    _at.at_cmd_discard("^SGPSC", "=", "%s%d", "Engine", 3);
+    //_at.at_cmd_discard("^SGPSC", "=", "%s%s", "Nmea/Output", "off");
+    _at.at_cmd_discard("^SGPSE", "=", "%s%s", "Nmea/Urc", "on");
+    _at.clear_error();
+    _at.unlock();
+}
+
+
 nsapi_error_t GEMALTO_CINTERION_CellularStack::socket_stack_init()
 {
     _at.lock();
@@ -135,6 +169,8 @@ nsapi_error_t GEMALTO_CINTERION_CellularStack::socket_stack_init()
         _at.set_urc_handler("^SISW:", mbed::Callback<void()>(this, &GEMALTO_CINTERION_CellularStack::urc_sisw));
         _at.set_urc_handler("^SISR:", mbed::Callback<void()>(this, &GEMALTO_CINTERION_CellularStack::urc_sisr));
         _at.set_urc_handler("^SYSSTART", mbed::Callback<void()>(this, &GEMALTO_CINTERION_CellularStack::urc_sysstart));
+        _at.set_urc_handler("^SGPSE", mbed::Callback<void()>(this, &GEMALTO_CINTERION_CellularStack::urc_gnss));
+        _at.set_urc_handler("$G", mbed::Callback<void()>(this, &GEMALTO_CINTERION_CellularStack::urc_gnss));
     } else { // recovery cleanup
         // close all Internet and connection profiles
         for (int i = 0; i < _device.get_property(AT_CellularDevice::PROPERTY_SOCKET_COUNT); i++) {
diff --git a/connectivity/drivers/cellular/GEMALTO/CINTERION/GEMALTO_CINTERION_CellularStack.h b/connectivity/drivers/cellular/GEMALTO/CINTERION/GEMALTO_CINTERION_CellularStack.h
index b0ae8d23e1..163fa3193f 100644
--- a/connectivity/drivers/cellular/GEMALTO/CINTERION/GEMALTO_CINTERION_CellularStack.h
+++ b/connectivity/drivers/cellular/GEMALTO/CINTERION/GEMALTO_CINTERION_CellularStack.h
@@ -34,6 +34,10 @@ public:
      */
     nsapi_error_t socket_stack_init();
 
+    void lock();
+    void unlock();
+    void startGNSS(mbed::Callback<void(char*)> gnss_cb);
+
 protected:
 
     virtual nsapi_error_t socket_close_impl(int sock_id);
@@ -61,6 +65,8 @@ private:
     void urc_sisr();
     void sisr_urc_handler(int sock_id, int urc_code);
 
+    void urc_gnss();
+
     // sockets need a connection profile, one profile is enough to support single stack sockets
     nsapi_error_t create_connection_profile(int connection_profile_id);
     void close_connection_profile(int connection_profile_id);
@@ -73,6 +79,8 @@ private:
     const char *_user;
     const char *_password;
 
+    mbed::Callback<void(char*)> _gnss_cb;
+
 #ifdef MBED_CONF_CELLULAR_OFFLOAD_DNS_QUERIES
     hostbyname_cb_t _dns_callback;
     nsapi_version_t _dns_version;
-- 
2.39.1

